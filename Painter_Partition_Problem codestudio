#include <bits/stdc++.h>
#include <iostream>
using namespace std;

bool isPossible(vector<int> &boards, int k, int mid)
{
    int count = 1; //no. of painter
    int sum = 0; //total time
    int size = boards.size();
    for (int i = 0; i < size; i++)
    {
        if ((sum + boards[i]) <= mid)
        {
            sum += boards[i]; //until sum less than mid
        }
        else
        {
            count++; //another painter
            if (count > k || boards[i] > mid)
            {
                return false;
            }
            sum = boards[i];
        }
    }
    return true;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    int s = 0;
    int size = boards.size();
    int sum_time = 0;
    for (int i = 0; i < size; i++)
    {
        sum_time += boards[i];
    }
    int e = sum_time;
    int mid = s + (e - s) / 2;
    int ans = -1;
    
    while (s <= e)
    {
        mid = s + (e - s) / 2;
        if (isPossible(boards, k, mid))
        {
            ans = mid;
            e = mid - 1;
        }
        else
        {
            s = mid + 1;
        }
    }
    return ans;
}

int main()
{
    vector<int> arr = {48 ,90};
    cout << findLargestMinDistance(arr, 2);
    return 0;
}

