#include <bits/stdc++.h>
#include <iostream>
using namespace std;

bool ifPossible(vector<int> &stalls, int k, int mid)
{
    int count = 1;
    int lastPosition = stalls[0];//to compare from first element
    for (int i = 0; i < stalls.size(); i++)
    {
        if (stalls[i] - lastPosition >= mid)
        {
            count++;
            if (count == k)
            {
                return true;
            }
            lastPosition = stalls[i];
        }
    }
    return false;
}

int aggressiveCows(vector<int> &stalls, int k)
{
    int s = 0;
    sort(stalls.begin(), stalls.end());
    // sorted array

    int e = *max_element(stalls.begin(), stalls.end());

    int ans = -1;
    while (s <= e)
    {
        int mid = s + (e - s) / 2;

        if (ifPossible(stalls, k, mid))
        {
            ans = mid;
            s = mid + 1;
        }
        else
        {
            e = mid - 1;
        }
        mid = s + (e - s) / 2;
    }
    return ans;
}

int main()
{
    vector<int> arr = {0, 3, 4, 7, 10, 9};
    int k = 4;
    cout << aggressiveCows(arr, k);
    cout << endl;

    return 0;
}
